#BlueJ class context
comment0.target=Vector
comment1.params=x\ y\ z
comment1.target=Vector(double,\ double,\ double)
comment1.text=\r\n\ Constructs\ a\ vector\ with\ the\ given\ double\ components\r\n\r\n\ @param\ x\ the\ x\ component\r\n\ @param\ y\ the\ y\ component\r\n\ @param\ z\ the\ z\ component\r\n
comment10.params=other
comment10.target=Vector\ add(Vector)
comment10.text=\r\n\ Adds\ two\ Vectors\ component\ wise\r\n\r\n\ @param\ other\ the\ other\ Vector\ being\ added\ with\ this\r\n\ @return\ the\ resulting\ Vector\r\n
comment11.params=other
comment11.target=Vector\ minus(Vector)
comment12.params=
comment12.target=Vector\ normalize()
comment12.text=\r\n\ Creates\ the\ unit\ Vector,\ a\ Vector\ with\ the\ same\ direction\ but\ a\ magnitude\ of\ 1\r\n\r\n\ @return\ the\ resulting\ unit\ Vector\r\n\ @throws\ IllegalStateException\ if\ the\ magnitude\ of\ the\ Vector\ is\ 0\r\n
comment13.params=other
comment13.target=double\ angleBetween(Vector)
comment13.text=\r\n\ Calculates\ the\ angle\ between\ two\ Vectors\r\n\r\n\ @param\ other\ the\ other\ vector\ being\ related\ to\ this\r\n\ @return\ the\ angle\ between\ the\ vectors\ as\ a\ double\r\n
comment14.params=o
comment14.target=boolean\ equals(java.lang.Object)
comment14.text=\r\n\ Compares\ this\ to\ another\ object\ to\ determine\ if\ they\ are\ both\ Vectors\ with\r\n\ equivalent\ components\ (with\ a\ tolerance\ of\ 1/1000)\r\n\ @param\ o\ the\ other\ object\ being\ considered\r\n\ @return\ whether\ the\ objects\ are\ equivalent\r\n
comment2.params=
comment2.target=double\ getX()
comment3.params=
comment3.target=double\ getY()
comment4.params=
comment4.target=double\ getZ()
comment5.params=
comment5.target=java.lang.String\ toString()
comment6.params=other
comment6.target=double\ dotProduct(Vector)
comment6.text=\r\n\ Multiplies\ this\ Vector\ by\ another\ component\ wise,\ then\ sums\ those\ products\r\n\r\n\ @param\ other\ the\ other\ Vector\ being\ dotProduct\ multiplied\ by\ this\r\n\ @return\ the\ resulting\ Scalar\r\n
comment7.params=other
comment7.target=Vector\ crossProduct(Vector)
comment7.text=\r\n\ Generates\ the\ Vector\ normal\ to\ this\ and\ other\r\n\r\n\ @param\ other\ the\ other\ Vector\ being\ crossProduct\r\n\ @return\ the\ resulting\ Vector\r\n
comment8.params=other
comment8.target=Vector\ multiply(double)
comment8.text=\r\n\ Multiplies\ the\ components\ of\ a\ Vector\ by\ a\ scalar\r\n\r\n\ @param\ other\ the\ scalar\ being\ multiplied\r\n\ @return\ the\ resulting\ Vector\r\n
comment9.params=
comment9.target=double\ getMagnitude()
numComments=15
